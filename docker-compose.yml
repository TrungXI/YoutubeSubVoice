version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: youtube_sub_voice
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/youtube_sub_voice
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AZURE_TTS_KEY=${AZURE_TTS_KEY:-}
      - AZURE_TTS_REGION=${AZURE_TTS_REGION:-eastus}
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
      - media-data:/app/public/media
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/youtube_sub_voice
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AZURE_TTS_KEY=${AZURE_TTS_KEY:-}
      - AZURE_TTS_REGION=${AZURE_TTS_REGION:-eastus}
    volumes:
      - .:/app
      - /app/node_modules
      - media-data:/app/public/media
    depends_on:
      - postgres
      - redis
      - app
    command: npm run worker

volumes:
  postgres-data:
  media-data:
